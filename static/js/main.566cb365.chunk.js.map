{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","Hooks/useFetch.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","formRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","reset","ref","type","useFetch","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","requestConfig","applyData","a","fetch","url","method","body","JSON","stringify","headers","response","ok","Error","json","data","message","NewTask","sendTaskRequest","enterTaskHandler","userInput","taskData","createdTask","name","onAddTask","App","tasks","setTasks","fetchTasks","useEffect","taskObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.566cb365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from \"./TaskItem.module.css\";\n\nconst TaskItem = ({ children }) => {\n  return <li className={classes.task}>{children}</li>;\n};\n\nexport default TaskItem;\n","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from \"react\";\nimport classes from \"./TaskForm.module.css\";\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n  const formRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    let enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n\n    formRef.current.reset();\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler} ref={formRef}>\n      <input type=\"text\" ref={taskInputRef} />\n      <button>{props.loading ? \"Sending...\" : \"Add Task\"}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from \"react\";\n\nconst useFetch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {},\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  return { isLoading, error, sendRequest };\n};\n\nexport default useFetch;\n","import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useFetch from \"../../Hooks/useFetch\";\n\nconst NewTask = (props) => {\n  const { error, isLoading, sendRequest: sendTaskRequest } = useFetch();\n\n  const enterTaskHandler = async (userInput) => {\n    const createTask = (taskData) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: userInput };\n\n      props.onAddTask(createdTask);\n    };\n    sendTaskRequest(\n      {\n        url: \"https://reactcourse-project15-default-rtdb.firebaseio.com/tasks.json\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: { text: userInput },\n      },\n      createTask\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useFetch from \"./Hooks/useFetch\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useFetch();\n\n  useEffect(() => {\n    const transformTasks = (taskObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n      }\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(\n      {\n        url: \"https://reactcourse-project15-default-rtdb.firebaseio.com/tasks.json\",\n      },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}